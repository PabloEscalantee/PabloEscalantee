import time
import datetime
import requests
import pandas as pd
from tqdm import tqdm

def get_AQI_cuali(x):    
    if x == 1:
        return('Bueno')
    elif x == 2:
        return('Decente')
    elif x == 3:
        return('Moderado')
    elif x == 4:
        return('Pobre')
    else:
        return('Muy Pobre')

def add_columns(j, df_normalizado):
    a = pd.Series(df_estaciones['Cod_Estacion'][j])
    df_normalizado['Cod_Estacion'] = a[0]
    return(df_normalizado)

def mes(x):
    if x == 1:
        return('Enero')
    elif x == 2:
        return('Febrero')
    elif x == 3:
        return('Marzo')
    elif x == 4:
        return('Abril')
    elif x == 5:
        return('Mayo')
    elif x == 6:
        return('Junio')
    elif x == 7:
        return('Julio')
    elif x == 8:
        return('Agosto')
    elif x == 9:
        return('Septiembre')
    elif x == 10:
        return('Octubre')
    elif x == 11:
        return('Noviembre')
    else:
        return('Diciembre')

fecha_final = input("Introduzca la fecha final: ")

start = int(time.mktime(datetime.datetime.strptime("01/01/2021", "%d/%m/%Y").timetuple()))
end = int(time.mktime(datetime.datetime.strptime(fecha_final, "%d/%m/%Y").timetuple()))

# Historical data for air pollution 
api_key = "fcc06b03f6caa30cd9537d8455babac3"

# Read spanish locations for air pollution
df_estaciones = pd.read_csv(r"C:\Users\Pablo\Documents\Autónomo\Brigido\Tablas\Informe Power BI\Master_Estaciones.csv",sep = ";", encoding = 'latin-1', decimal = ",")

df_historico = pd.DataFrame()

j = 0
pbar = tqdm(total=df_estaciones.shape[0], )

while j < df_estaciones.shape[0]:
    
    lat = str(df_estaciones['LATITUD_G'][j])
    lon = str(df_estaciones['LONGITUD_G'][j])
    
    #API URL - with latitude, longitud start date and end date as variable
    
    url = "http://api.openweathermap.org/data/2.5/air_pollution/history?lat=" + lat + "&lon=" + lon + "&start=" + str(start) +  "&end=" + str(end) + "&appid=" + api_key
    response = requests.get(url)
    lista = response.json().get("list")

    df_normalizado = pd.json_normalize(lista)
    
    df_historico = df_historico.append(add_columns(j,df_normalizado))
    df_historico['Date_ok'] = pd.to_datetime(df_historico['dt'], unit='s')
    df_historico['AQI_Cuali'] = df_historico['main.aqi'].apply(get_AQI_cuali)
    j = j + 1
    #print(f'Estás en la fila {j} quedan {df_estaciones.shape[0] - j } filas')
    #print(f'Numero de filas en el DataFrame {df_historico.shape[0]}')
    pbar.update(1)

#Export first dataframe
df_historico.to_csv(r'C:\Users\Pablo\Documents\Autónomo\Brigido\Tablas\Calidad_aire_2021\Historical_data.csv', index = False, sep = ";", decimal = ",", encoding = "latin-1")

def just_date(x):
    x = str(x)
    return str(x[:11])

df_historico['Date'] = df_historico['Date_ok'].apply(just_date)

del df_historico['Date_ok']

#Groupping rows for max min and average values of every columns

df_historico.set_index(['Date', 'Cod_Estacion'])

df_maximo = df_historico.groupby(['Date', 'Cod_Estacion'])['components.co','components.no','components.no2', 'components.o3',
                                                'components.so2', 'components.pm2_5', 'components.pm10',
                                                 'components.nh3'].max().reset_index()
df_minimo = df_historico.groupby(['Date', 'Cod_Estacion'])['components.co','components.no','components.no2', 'components.o3',
                                                'components.so2', 'components.pm2_5', 'components.pm10',
                                                 'components.nh3'].min().reset_index()
df_medio = df_historico.groupby(['Date', 'Cod_Estacion'])['components.co','components.no','components.no2', 'components.o3',
                                                'components.so2', 'components.pm2_5', 'components.pm10',
                                                'components.nh3'].mean().reset_index()
# Create new column to select the metric

df_maximo['Medida'] = 'Maximo'
df_medio['Medida'] = 'Media'
df_minimo['Medida'] = 'Mínimo'

df_resultado = pd.DataFrame()
frames = [df_maximo, df_medio, df_minimo]
df_resultado = pd.concat(frames)

df_fechas = pd.read_excel(r'C:\Users\Pablo\Documents\Autónomo\Brigido\Tablas\Informe Power BI\Maestro_fechas.xlsx')

df_resultado['Date'] = df_resultado['Date'].astype(str)
df_fechas['Fecha'] = df_fechas['Fecha'].astype(str)

def strip(x):
    return x.rstrip()

df_resultado['Date'] = df_resultado['Date'].apply(strip)


df_resultado_final = df_resultado.merge(df_fechas, left_on = 'Date', right_on = 'Fecha')
df_resultado_final = df_resultado_final.merge(df_estaciones, on = 'Cod_Estacion')

df_resultado_final.to_csv(r'C:\Users\Pablo\Documents\Autónomo\Brigido\Tablas\Calidad_aire_2021\Historical_data_ok.csv', index = False, sep = ";", decimal = ",", encoding = "latin-1")
